// <auto-generated />
using Data.DataConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.DataConnection.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    [Migration("20201020111701_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.Models.DanceCloth", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClothType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShoesType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DanceCloths");
                });

            modelBuilder.Entity("Data.Models.Models.DanceGroup", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanceGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DanceGroups");
                });

            modelBuilder.Entity("Data.Models.Models.DanceGroupFolkDance", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanceGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FolkDanceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("DanceGroupId");

                    b.HasIndex("FolkDanceId");

                    b.ToTable("DanceGroupFolkDances");
                });

            modelBuilder.Entity("Data.Models.Models.DanceSong", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DanceSongs");
                });

            modelBuilder.Entity("Data.Models.Models.FolkDance", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanceClothId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FolkDanceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolkDanceRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolkDanceSize")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DanceClothId")
                        .IsUnique()
                        .HasFilter("[DanceClothId] IS NOT NULL");

                    b.ToTable("FolkDances");
                });

            modelBuilder.Entity("Data.Models.Models.FolkDanceSong", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanceSongId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FolkDanceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("DanceSongId");

                    b.HasIndex("FolkDanceId");

                    b.ToTable("FolkDanceSong");
                });

            modelBuilder.Entity("Data.Models.Models.Image", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanceGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DanceGroupId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Data.Models.Models.PracticeSchedule", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanceGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PracticeTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DanceGroupId");

                    b.ToTable("PracticeSchedules");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanceGroupId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DanceGroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Models.DanceGroupFolkDance", b =>
                {
                    b.HasOne("Data.Models.Models.DanceGroup", "DanceGroup")
                        .WithMany("DanceGroupFolkDances")
                        .HasForeignKey("DanceGroupId");

                    b.HasOne("Data.Models.Models.FolkDance", "FolkDance")
                        .WithMany("DanceGroupFolkDances")
                        .HasForeignKey("FolkDanceId");
                });

            modelBuilder.Entity("Data.Models.Models.FolkDance", b =>
                {
                    b.HasOne("Data.Models.Models.DanceCloth", "DanceCloth")
                        .WithOne("FolkDance")
                        .HasForeignKey("Data.Models.Models.FolkDance", "DanceClothId");
                });

            modelBuilder.Entity("Data.Models.Models.FolkDanceSong", b =>
                {
                    b.HasOne("Data.Models.Models.DanceSong", "DanceSong")
                        .WithMany("FolkDanceSongs")
                        .HasForeignKey("DanceSongId");

                    b.HasOne("Data.Models.Models.FolkDance", "FolkDance")
                        .WithMany("FolkDanceSongs")
                        .HasForeignKey("FolkDanceId");
                });

            modelBuilder.Entity("Data.Models.Models.Image", b =>
                {
                    b.HasOne("Data.Models.Models.DanceGroup", "DanceGroup")
                        .WithMany("Images")
                        .HasForeignKey("DanceGroupId");
                });

            modelBuilder.Entity("Data.Models.Models.PracticeSchedule", b =>
                {
                    b.HasOne("Data.Models.Models.DanceGroup", "DanceGroup")
                        .WithMany("PracticeSchedules")
                        .HasForeignKey("DanceGroupId");
                });

            modelBuilder.Entity("Data.Models.Models.User", b =>
                {
                    b.HasOne("Data.Models.Models.DanceGroup", "DanceGroup")
                        .WithMany("Users")
                        .HasForeignKey("DanceGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
